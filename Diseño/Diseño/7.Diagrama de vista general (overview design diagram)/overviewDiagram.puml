@startuml
'The Lord is my shepheard, I shall not be in want. 
'He restores my soul. He guides me in paths of righteousness for his name's sake. 
'Even though I walk through the valley of the shadow of death, I will fear no evil, for you are with me; 
'your rod and your staff, they comfort me.

partition **sd** InteractionOverviewDiagram{

start


:AltaAlumno
{{

Participant Alumno as ALM
Participant Profesor as PFR
Participant "Lector NFC" as LNFC
Participant "Sistema de Asistencias" as SYS
Database "Data storage" as DAS

mainframe AltaAlumno

ALM -> PFR : Dar tarjeta
PFR -> LNFC : Escanear tarjeta con el lector
LNFC -> SYS : Mandar NFC único a sistema
SYS -> SYS : Verificar existencia de NFC

group NFC Existe

SYS -> SYS : Mensaje "Error, el NFC ya existe y tiene datos asociados."
SYS --> LNFC : Error (Exception null)

end

group NFC No existe

PFR -> SYS : Ingresar datos de alumno
SYS -> SYS : Mensaje "Alumno dado de alta exitosamente."
SYS -> DAS : Datos de alumno

end

PFR -> ALM : Devolver tarjeta
 
}}
;

break

while (Datos de alumno correctos?) is (No)
   
   :Reintentar registro de alumno;

endwhile (Sí)

:RegistrarAlumnoEnGrupo
{{

Participant Profesor as PFR
Participant "Sistema de asistencias" as SA
Participant "Writer" as WR
Database "Data storage" as DAS

mainframe RegistrarAlumnoEnGrupo

SA <- PFR : Cargar datos de alumno \n al sistema
SA -> WR: Enviar datos de alumno al writer
WR-> DAS : Cargar valores hash \n al data storage
DAS -> DAS : write(hash, grupo)
DAS --> SA : Alumno

}}
;

break

:CambioAlumno
{{

Participant Profesor as PFR
Participant "Sistema de asistencias" as SA
Database "Data storage" as DAS

mainframe CambioAlumno

PFR -> SA : Nuevos datos del alumno
ref over SA, DAS : AltaAlumno

SA --> PFR : Mensaje "Datos de alumno actualizados."

}}
;

:BajaAlumno
{{

Participant Profesor as PFR
Participant "Sistema de asistencias" as SA
Database "Data storage" as DAS

mainframe BajaAlumno

PFR -> SA : Seleccionar el alumno\n en lista desplegada

group Alumno Existe

SA -> DAS : delete(alumno)
DAS --> SA : Mensaje "Alumno borrado exitosamente."

end


}}
;

break

:GenerarYExportarReporte
{{

Participant Profesor as PFR
Participant "Sistema de Asistencias" as SA
Database "Data storage" as DAS
Participant Informe as INF

mainframe GenerarYExportarReporte

PFR -> SA : Solicitar el informe
SA -> PFR : Desplegar opciones de reporte\n disponibles
PFR -> SA : Seleccionar tipo de reporte

SA -> DAS : read(datos)
DAS --> INF : writeOnReport(datos)
INF -> SA : Informe listo para\n exportar
SA -> PFR : Desplegar lista de formatos \n para exportación
PFR -> SA : Formato elegido de lista
SA --> PFR : Informe en formato elegido


}}
;
break

stop

}
@enduml
