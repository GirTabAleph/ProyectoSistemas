@startuml
'Este archivo contiene el código necesario para generar el diagrama de clases del sistema.

'Dado que libnfc es una biblioteca ya existente, el paquete es el mejor elemento que se le ajusta.
'Para efectos prácticos basta con dejar solo el nombre de la biblioteca.
package libnfc <<folder>>{
}

'Un módulo para raspberry pi tiene estos tres modos. Los tomaremos como referencia.
enum TipoDeLectura{

LECTOR
P2P
EMULACION_DE_TARJETA

}

enum Temporalidad{
DIA
SEMANAL
MENSUAL
SEMESTRAL
}

enum Formato{
CSV
XLS
XLSX
PDF

}


interface ILectorTarjeta{

TipoDeLectura TipoActual

LeerNFCTarjeta()

}

interface ITarjeta{

long idNFC

}

interface Model{
}

#interface IDataStorage{

'Toda esta interfaz es únicamente de métodos.
read() : Model
write(Model)


}


class Tarjeta{ 

long idNFC

}

+class LectorTarjeta{

TipoDeLectura tipoActual

'Métodos.
LeerNFCTarjeta()

}

+class Persona{

String nombre

}

+class Alumno{

DatosAlumnoParaReporte datos
int numeroCuenta
Tarjeta tarjetaAsociada
Grupo Grupos[]

} 

+class Profesor{

'Métodos.
AltaAlumno(Alumno)
BajaAlumno(Alumno)
CambioAlumno(Alumno)
AltaGrupo(Grupo)
BajaGrupo(Grupo)

}

+class Grupo{

Alumno Alumnos[]
int idGrupo

}

class SistemaAsistencias{

Alumno[] alumnos
Grupo[] grupos

'Métodos.
AccederAInforme()
RegistrarAsistenciaAlumno()
GenerarInformePorTiempo(Temporalidad)
ExportarInforme(Formato)

}

#class DAO_Alumno{

IDataStorage DataStorage

sendAlumnoDataToStorage(Alumno)
search(Alumno) : Alumno
update(Alumno) : Alumno
deleteAlumnoFromStorage(Alumno)

}

#class DAO_Grupo{

IDataStorage DataStorage

sendGrupoDataToStorage(Grupo)
search(Grupo) : Grupo
update(Grupo) : Grupo
deleteGrupoFromStorage(Grupo)

}

#class DAO_Informe{

IDataStorage DataStorage

writeDataInforme() : Informe
deleteCurrentInforme(Informe)
updateCurrentInforme(Informe) : Informe

}

'Privado porque solo el profesor interactúa con él.
-class Informe{

Opciones[] opciones
Alumno[] alumnos
Grupo[] grupos

}

+class Opciones{

int numeroAsistencias
int numeroFaltas
Formato formato

}

'Relaciones.
libnfc <. LectorTarjeta

Tarjeta -- LectorTarjeta

TipoDeLectura <- ILectorTarjeta

LectorTarjeta ..|> ILectorTarjeta
Tarjeta ..|> ITarjeta

SistemaAsistencias ---> Temporalidad
SistemaAsistencias ---> Formato

SistemaAsistencias ..> Alumno
SistemaAsistencias ..> Grupo
SistemaAsistencias -- Informe

Opciones -- Formato

Alumno ..|> Model

'Para este sistema un alumno solo puede tener una tarjeta a menos que deba hacer el reemplazo.
Alumno -- Tarjeta: 1

'Un cambio en la clase grupo afecta a la clase reporte, por eso es una dependencia.
Grupo <.. Informe

Grupo --- Alumno

Opciones -- Informe

DAO_Alumno .> Alumno
DAO_Grupo .> Grupo
Alumno ---o Grupo: 1 .. *
Grupo .|> Model
DAO_Informe .> Informe
Informe -- IDataStorage

'Un cambio en DataStorage cambia el funcionamiento de los DAOs. Además deben implementar a IDataStorage
DAO_Alumno ...|> IDataStorage
DAO_Grupo ...|> IDataStorage
DAO_Informe ...|> IDataStorage

Alumno --- Informe

Profesor --|> Persona
Alumno --|> Persona

Informe .|> Model
@enduml
