@startuml
'Este archivo contiene el código necesario para generar el diagrama de clases del sistema.

'Un módulo para raspberry pi tiene estos tres modos. Los tomaremos como referencia.
enum TipoDeLectura{

LECTOR
P2P
EMULACION_DE_TARJETA

}

enum Temporalidad{
DIA
SEMANAL
MENSUAL
SEMESTRAL
}

enum Formato{
CSV
XLS
XLSX
PDF

}

enum DatosAlumnoParaReporte{

GRUPO
PERIODO_CURSADO
NUM_ASISTENCIAS
NUM_FALTAS

}

interface ILectorTarjeta{

TipoDeLectura TipoActual

}

interface ITarjeta{

long idNFC

}


#interface DataStorage{
Ubicacion local

'Toda esta interfaz es únicamente de métodos.
read() : Alumno
read() : Informe
read() : Grupo
write(Alumno)
write(Informe)
write(Grupo)

}

'Dado que libnfc es una biblioteca ya existente, el paquete es el mejor elemento que se le ajusta.
'Para efectos prácticos basta con dejar solo el nombre de la biblioteca.
package libnfc <<folder>>{
}

class Tarjeta{ 

ITarjeta Tarjeta

}

+class LectorTarjeta{

tipoDeLectura tipoActual

'Métodos.
LeerNFCTarjeta()

}

+class Persona{

String nombre

}

+class Alumno{

DatosAlumnoParaReporte datos
int numeroMatricula
Tarjeta tarjetaAsociada
Grupo Grupos[]

} 

+class Profesor{

int numGruposAsociados

'Métodos.
AltaAlumno(Alumno)
BajaAlumno(Alumno)
CambioAlumno(Alumno)
AltaGrupo(Grupo)
BajaGrupo(Grupo)

}

+class Grupo{

Alumno Alumnos[]
int idGrupo

}

class SistemaAsistencias{

Alumno[] alumnos
Grupo[] grupos

'Métodos.
AccederAInforme()
RegistrarAsistenciaAlumno()
GenerarInformePorTiempo(Temporalidad)
ExportarInforme(Formato)

}

#class DAO_Alumno{

IDataStorage DataStorage

sendAlumnoDataToStorage(Alumno)
search(Alumno) : Alumno
update(Alumno) : Alumno
deleteAlumnoFromStorage(Alumno)

}

#class DAO_Grupo{

IDataStorage DataStorage

sendGrupoDataToStorage(Grupo)
search(Grupo) : Grupo
update(Grupo) : Grupo
deleteGrupoFromStorage(Grupo)

}

#class DAO_Informe{

IDataStorage DataStorage

writeDataInforme() : Informe
deleteCurrentInforme(Informe)
updateCurrentInforme(Informe) : Informe

}

'Privado porque solo el profesor interactúa con él.
-class Informe{

Alumno[] alumnos
Grupo[] grupos


}

'Relaciones.
TipoDeLectura <-- ILectorTarjeta

Tarjeta ..|> ITarjeta
LectorTarjeta ..|> ILectorTarjeta


'Para este sistema un alumno solo puede tener una tarjeta a menos que deba hacer el reemplazo.
Alumno -- Tarjeta: 1

Alumno - DatosAlumnoParaReporte

Tarjeta -- LectorTarjeta

Profesor --|> Persona
Alumno --|> Persona

'Un cambio en la clase grupo afecta a la clase reporte, por eso es una dependencia.
Grupo <.. Informe

Alumno --o Grupo: 1 .. *

libnfc <. LectorTarjeta

SistemaAsistencias ---> Temporalidad
SistemaAsistencias ---> Formato

SistemaAsistencias .> Alumno
SistemaAsistencias .> Grupo
SistemaAsistencias -- Informe

'Un cambio en DataStorage cambia el funcionamiento de los DAOs. Además deben implementar a IDataStorage
DAO_Alumno ...|> DataStorage
DAO_Grupo ...|> DataStorage
DAO_Informe ...|> DataStorage

Informe - DataStorage
Informe - Alumno
@enduml
